name: Docker Build, Test and Deploy

on:
  push:
    branches: [main, test-branch]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [main, test-branch]

env:
  IMAGE_NAME: json_validator
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/json_validator

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show repository structure
        run: ls -laR

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest requests

      - name: Run unit tests
        run: |
          python -m pytest -v test_server.py

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ env.DOCKERHUB_REPO }}:latest

      - name: Test Docker container
        run: |
          docker run -d -p 8000:8000 --name ${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}
          sleep 5
          curl -sSf http://localhost:8000/
          python -m pytest -v test_server.py --base-url http://localhost:8000

      - name: Cleanup
        if: always()
        run: |
          docker stop ${{ env.IMAGE_NAME }} || true
          docker rm ${{ env.IMAGE_NAME }} || true